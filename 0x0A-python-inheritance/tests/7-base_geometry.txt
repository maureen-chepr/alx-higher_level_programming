Test cases for 7-base_geometry module

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

Testing for area failure:
	 >>> bg.area()
	 Traceback (most recent call last):
	 ...
	 Exception: area() is not implemented

Testing too many arguments for area:
	 >>> bg.area(1)
	 Traceback (most recent call last):
         ...
	 TypeError: area() takes 1 positional argument but 2 were given

Testing integer validator for passing integer:
	 >>> bg.integer_validator("integer", 1)

Testing for integer == 0:
	 >>> bg.integer_validator("integer", 0)
	 Traceback (most recent call last):
         ...
         ValueError: integer must be greater than 0

Testing for integer < 0;
	 >>> bg.integer_validator("integer", -3)
	 Traceback (most recent call last):
         ...
         ValueError: integer must be greater than 0

Testing for non-integer types:
	 >>> bg.integer_validator("float", 7.5)
         Traceback (most recent call last):
         ...
         TypeError: float must be an integer
	 >>> bg.integer_validator("complex", complex(1, 1))
         Traceback (most recent call last):
         ...
         TypeError: complex must be an integer

Testing for no arguments to integer_validator:
	 >>> bg.integer_validator()
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Testing for only 1 argument to integer_validator:
	 >>> bg.integer_validator("integer")
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 1 required positional argument: 'value'

Testing for too many arguments:
	 >>> bg.integer_validator("integer", 5, 2)
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> try:
...     bg.integer_validator('greg', )
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
...
[TypeError] integer_validator() missing 1 required positional argument: 'value'


    >>> bg.integer_validator('greg', (1, 2))
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
        raise TypeError('{} must be an integer'.format(name))
    TypeError: greg must be an integer

    >>> bg.integer_validator('greg', (1))

    >>> bg.integer_validator('greg', (1,))
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
        raise TypeError('{} must be an integer'.format(name))
    TypeError: greg must be an integer

    >>> bg.integer_validator('greg', -86)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
        raise ValueError('{} must be greater than 0'.format(name))
    ValueError: greg must be greater than 0

    >>> bg.integer_validator('greg', -86.7)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
        raise TypeError('{} must be an integer'.format(name))
    TypeError: greg must be an integer
