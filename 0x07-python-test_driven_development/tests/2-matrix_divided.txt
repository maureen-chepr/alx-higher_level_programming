#Tests Case for matrix_divided 

matrix divided module
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided 

matrix divided with correct output
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matrix divided with 0 as full list
	>>> matrix = ([[0, 0, 0], [4, 5, 6]])
	>>> matrix_divided(matrix, 3)
	[[0.0, 0.0, 0.0], [1.33, 1.67, 2.0]]

matrix divided with non matrix value eg.sets
	>>> matrix = ([1, 2, 3], [4, 5, 6])
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix divided with non int
	>>> not_all_num = ([[1, 'a', 3], [4, 5, 'b']])
	>>> matrix_divided(not_all_num, 3)
	Traceback (most recent call last):
	...
	TypeError: unsupported operand type(s) for /: 'str' and 'int'

matrix divided by 0
	>>> matrix = ([[1, 2, 3], [4, 5, 6]])
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

matrix divided with uneven matrix
	>>> diff_len = ([[1, 2, 3], [4, 5]])
	>>> matrix_divided(diff_len, 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size
